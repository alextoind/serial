name: CMake-CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, windows-latest, macos-latest]

    steps:
    - name: Clone GTest
      shell: bash
      working-directory: ${{runner.workspace}}
      run: git clone https://github.com/google/googletest.git

    - name: Create GTest Build Environment
      shell: bash
      working-directory: ${{runner.workspace}}/googletest
      run: cmake -E make_directory build

    - name: Configure GTest CMake
      shell: bash
      working-directory: ${{runner.workspace}}/googletest/build
      run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS=-std=c++11

    - name: Install GTest
      shell: bash
      working-directory: ${{runner.workspace}}/googletest/build
      run: cmake --build . --config $BUILD_TYPE --target install || sudo cmake --build . --config $BUILD_TYPE --target install

    - name: Export CMAKE_PREFIX_PATH on Windows
      shell: bash
      if: runner.os == 'Windows'
      run: echo '::set-env name=CMAKE_PREFIX_PATH::C:/Program Files (x86)/googletest-distribution'

    - name: Checkout
      uses: actions/checkout@v2

    - name: Create Build Environment
      shell: bash
      working-directory: ${{runner.workspace}}/serial
      run: cmake -E make_directory build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/serial/build
      run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Cat unix_serial_tests.vcxproj on Windows
      shell: bash
      working-directory: ${{runner.workspace}}/serial/build
      if: runner.os == 'Windows'
      run: cat unix_serial_tests.vcxproj

    - name: List libraries on Windows
      shell: powershell
      working-directory: ${{runner.workspace}}/serial/build/Release
      if: runner.os == 'Windows'
      run: Get-ChildItem -Path ${{runner.workspace}}/serial/build/Release -Force -Recurse

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/serial/build
      run: cmake --build . --config $BUILD_TYPE --target install || sudo cmake --build . --config $BUILD_TYPE --target install

    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/serial/build
      run: ctest -C $BUILD_TYPE
